<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>AIË®ò‰∫ã„É¨„Éì„É•„Éº - „Ç§„É≥„É©„Ç§„É≥„Ç≥„É°„É≥„Éà</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <style>
        /* GoogleDocs„É©„Ç§„ÇØ„Å™„Ç≥„É°„É≥„ÉàË°®Á§∫ */
        .comment-highlight {
            background-color: #fef3c7;
            border-bottom: 2px solid #f59e0b;
            cursor: pointer;
            position: relative;
        }
        
        .comment-highlight:hover {
            background-color: #fde68a;
        }
        
        .comment-highlight.active {
            background-color: #fed7aa;
            border-bottom-color: #ea580c;
        }
        
        .comment-panel {
            position: sticky;
            top: 20px;
            max-height: calc(100vh - 40px);
            overflow-y: auto;
        }
        
        .comment-item {
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            background: white;
            margin-bottom: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            transition: all 0.2s ease;
        }
        
        .comment-item:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
        
        .comment-item.highlighted {
            border-color: #3b82f6;
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
        }
        
        .article-content {
            line-height: 1.8;
            font-size: 16px;
        }
        
        .comment-thread {
            border-left: 3px solid #e5e7eb;
            padding-left: 12px;
            margin-left: 8px;
        }
        
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            z-index: 50;
        }
        
        .custom-scroll::-webkit-scrollbar {
            width: 6px;
        }
        
        .custom-scroll::-webkit-scrollbar-track {
            background: #f1f5f9;
        }
        
        .custom-scroll::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- „Éò„ÉÉ„ÉÄ„Éº -->
    <header class="bg-white shadow-sm border-b sticky top-0 z-40">
        <div class="mx-[5%] px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center space-x-4">
                    <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold text-lg">
                        üìù
                    </div>
                    <div>
                        <h1 class="text-2xl font-bold text-gray-900">AIË®ò‰∫ã„É¨„Éì„É•„Éº</h1>
                        <p class="text-sm text-gray-500">„Ç§„É≥„É©„Ç§„É≥„Ç≥„É°„É≥„ÉàÂΩ¢Âºè„Åß„É™„Ç¢„É´„Çø„Ç§„É†ÊîπÂñÑÊèêÊ°à</p>
                    </div>
                </div>
                <div class="flex space-x-4">
                    <button onclick="showNewArticleModal()" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm">
                        Êñ∞„Åó„ÅÑË®ò‰∫ã
                    </button>
                    <button onclick="exportComments()" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 text-sm">
                        üìÑ „Ç®„ÇØ„Çπ„Éù„Éº„Éà
                    </button>
                </div>
            </div>
        </div>
    </header>

    <div class="mx-[5%] px-4 sm:px-6 lg:px-8 py-6">
        <!-- „É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Ç®„É™„Ç¢ -->
        <div id="reviewContainer" class="grid grid-cols-1 lg:grid-cols-3 gap-8 hidden">
            <!-- Â∑¶ÂÅ¥ÔºöË®ò‰∫ã„Ç≥„É≥„ÉÜ„É≥„ÉÑ -->
            <div class="lg:col-span-2">
                <div class="bg-white rounded-lg shadow-lg">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center justify-between mb-4">
                            <h2 class="text-xl font-semibold text-gray-800">Ë®ò‰∫ãÁ∑®ÈõÜ</h2>
                            <div class="flex space-x-2">
                                <button onclick="toggleEditMode()" id="editModeBtn" class="px-3 py-1 bg-blue-100 text-blue-700 text-sm rounded-full hover:bg-blue-200 transition-colors">
                                    Á∑®ÈõÜ„É¢„Éº„Éâ
                                </button>
                                <span class="px-3 py-1 bg-green-100 text-green-700 text-sm rounded-full" id="analysisStatus">
                                    ÂàÜÊûêÂÆå‰∫Ü
                                </span>
                                <span class="px-3 py-1 bg-blue-100 text-blue-700 text-sm rounded-full" id="commentCount">
                                    „Ç≥„É°„É≥„Éà: 0
                                </span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- „Éó„É¨„Éì„É•„Éº„É¢„Éº„Éâ -->
                    <div class="p-8 article-content prose max-w-none" id="articleContent">
                        <!-- Ë®ò‰∫ãÂÜÖÂÆπ„Åå„Åì„Åì„Å´Ë°®Á§∫„Åï„Çå„Çã -->
                    </div>
                    
                    <!-- Á∑®ÈõÜ„É¢„Éº„Éâ -->
                    <div class="p-6 hidden" id="editMode">
                        <div class="mb-4">
                            <div class="flex justify-between items-center mb-2">
                                <label class="text-sm font-medium text-gray-700">Ë®ò‰∫ãÂÜÖÂÆπÔºàMarkdownÔºâ</label>
                                <div class="text-xs text-gray-500">
                                    <span id="editCharCount">0 ÊñáÂ≠ó</span>
                                </div>
                            </div>
                            <textarea 
                                id="editTextarea" 
                                rows="20"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-y font-mono text-sm"
                                placeholder="MarkdownÂΩ¢Âºè„ÅßË®ò‰∫ã„ÇíÁ∑®ÈõÜ„Åó„Å¶„Åè„Å†„Åï„ÅÑ..."></textarea>
                        </div>
                        
                        <div class="flex justify-between">
                            <button onclick="previewChanges()" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
                                üëÄ „Éó„É¨„Éì„É•„Éº
                            </button>
                            <div class="space-x-2">
                                <button onclick="saveChanges()" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                                    üíæ ‰øùÂ≠ò
                                </button>
                                <button onclick="reAnalyze()" class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors">
                                    üîÑ ÂÜçÂàÜÊûê
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Âè≥ÂÅ¥Ôºö„Ç≥„É°„É≥„Éà„ÉªÊîπÂñÑÊèêÊ°à„Éë„Éç„É´ -->
            <div class="lg:col-span-1">
                <div class="comment-panel">
                    <div class="bg-white rounded-lg shadow-lg p-6">
                        <h3 class="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                            <span class="w-6 h-6 bg-yellow-100 rounded-full flex items-center justify-center text-yellow-600 mr-2">üí°</span>
                            ÊîπÂñÑÊèêÊ°à
                        </h3>
                        
                        <div id="commentsContainer" class="space-y-4 custom-scroll">
                            <!-- „Ç≥„É°„É≥„Éà„Åå„Åì„Åì„Å´Ë°®Á§∫„Åï„Çå„Çã -->
                        </div>
                        
                        <div id="noCommentsMessage" class="text-center py-8 text-gray-500">
                            Ë®ò‰∫ã„ÇíÂàÜÊûê‰∏≠„Åß„Åô...
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- ÂàùÊúüÂÖ•ÂäõÁîªÈù¢ -->
        <div id="inputContainer" class="max-w-4xl mx-auto">
            <div class="bg-white rounded-lg shadow-lg p-8">
                <div class="text-center mb-8">
                    <h2 class="text-3xl font-bold text-gray-900 mb-4">Ë®ò‰∫ã„É¨„Éì„É•„Éº„ÇíÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜ</h2>
                    <p class="text-gray-600">Ë®ò‰∫ã„ÇíÂÖ•Âäõ„Åô„Çã„Å®„ÄÅAI „ÅåËá™Âãï„ÅßÊîπÂñÑÊèêÊ°à„Çí„Ç§„É≥„É©„Ç§„É≥„Ç≥„É°„É≥„ÉàÂΩ¢Âºè„ÅßË°®Á§∫„Åó„Åæ„Åô</p>
                </div>

                <form id="articleForm" onsubmit="analyzeArticle(event)">
                    <div class="mb-6">
                        <label for="articleInput" class="block text-sm font-medium text-gray-700 mb-2">
                            Ë®ò‰∫ãÂÜÖÂÆπÔºàMarkdownÂØæÂøúÔºâ
                        </label>
                        <textarea 
                            id="articleInput" 
                            name="content"
                            rows="15" 
                            class="w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-y"
                            placeholder="# „ÉÅ„Éº„É†ÈñãÁô∫√ó„Éá„Éº„ÇøÂàÜÊûê„Å´Êåë„ÇÄ3Days„Éè„ÉÉ„Ç´„ÇΩ„É≥Âèó‰ªòÈñãÂßã

![PR TIMES HACKATHON](https://example.com/image.jpg)

„Éó„É¨„Çπ„É™„É™„Éº„ÇπÈÖç‰ø°„Çµ„Éº„Éì„Çπ„ÄåPR TIMES„ÄçÁ≠â„ÇíÈÅãÂñ∂„Åô„ÇãÊ†™Âºè‰ºöÁ§æPR TIMESÔºàÊù±‰∫¨ÈÉΩÊ∏ØÂå∫„ÄÅ‰ª£Ë°®ÂèñÁ∑†ÂΩπÔºöÂ±±Âè£ÊãìÂ∑±„ÄÅÊù±Ë®º„Éó„É©„Ç§„É†Ôºö3922Ôºâ„ÅØ„ÄÅ2026„Éª27Âπ¥ÂçíÊ•≠‰∫àÂÆö„ÅÆ„Ç®„É≥„Ç∏„Éã„Ç¢ÂøóÊúõÂ≠¶Áîü„ÇíÂØæË±°„Å´„ÄÅ„ÄåPR TIMES HACKATHON 2025 Summer„Äç„ÇíÈñãÂÇ¨„Åó„Åæ„Åô„ÄÇ

## Âêå‰∏ñ‰ª£„Ç®„É≥„Ç∏„Éã„Ç¢„Å®„Å§„Å™„Åå„Çä„ÄÅ„ÉÅ„Éº„É†ÈñãÁô∫„ÅÆÁµåÈ®ì„ÇíÁ©ç„ÇÅ„Çã3Êó•Èñì

PR TIMES„Éè„ÉÉ„Ç´„ÇΩ„É≥„ÅØ„ÄÅ2016Âπ¥„Çà„ÇäÈñãÂÇ¨„Åó„Å¶„ÅÑ„ÇãÂÜÖÂÆöÁõ¥ÁµêÂûã„ÅÆ„Éè„ÉÉ„Ç´„ÇΩ„É≥„Ç§„Éô„É≥„Éà„Åß„Åô„ÄÇ2025Âπ¥9Êúà8Êó•„Äú10Êó•„ÅÆ3Êó•Èñì„ÅßWeb„Çµ„Éº„Éì„Çπ„ÅÆÈñãÁô∫„ÇíË°å„ÅÑ„ÄÅÁâπ„Å´ÂÑ™ÁßÄ„Å™Êñπ„Å´„ÅØÂπ¥Âèé500‰∏áÂÜÜ‰ª•‰∏ä„ÅÆ‰∏≠ÈÄîÊé°Áî®Âü∫Ê∫ñ„Åß„ÅÆÂÜÖÂÆö„Çí„ÅäÂá∫„Åó„Åó„Åæ„Åô„ÄÇ"
                            required></textarea>
                        <div class="text-right text-xs text-gray-500 mt-1">
                            <span id="charCount">0 ÊñáÂ≠ó</span>
                        </div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                        <div>
                            <label for="targetPersona" class="block text-sm font-medium text-gray-700 mb-2">
                                „Çø„Éº„Ç≤„ÉÉ„ÉàË™≠ËÄÖÔºà‰ªªÊÑèÔºâ
                            </label>
                            <input 
                                type="text" 
                                id="targetPersona" 
                                name="persona"
                                placeholder="‰æã: 26„Éª27ÂçíÂ∞±Ê¥ªÁîü„ÄÅITÊ•≠ÁïåÂøóÊúõ"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        </div>

                        <div>
                            <label for="releaseType" class="block text-sm font-medium text-gray-700 mb-2">
                                „É™„É™„Éº„Çπ„Çø„Ç§„ÉóÔºà‰ªªÊÑèÔºâ
                            </label>
                            <select 
                                id="releaseType" 
                                name="release_type"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                                <option value="">ÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ</option>
                                <option value="„Ç§„Éô„É≥„Éà">„Ç§„Éô„É≥„Éà</option>
                                <option value="Êñ∞ÂïÜÂìÅ">Êñ∞ÂïÜÂìÅ</option>
                                <option value="„Çµ„Éº„Éì„Çπ">„Çµ„Éº„Éì„Çπ</option>
                                <option value="‰ºÅÊ•≠">‰ºÅÊ•≠</option>
                            </select>
                        </div>
                    </div>

                    <div class="text-center">
                        <button 
                            type="submit"
                            id="analyzeButton" 
                            class="px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg font-semibold text-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
                        >
                            üöÄ AI „É¨„Éì„É•„Éº„ÇíÈñãÂßã
                        </button>
                        <p class="text-sm text-gray-500 mt-2">Âº∑„ÅøÂàÜÊûê„Éª„Å™„Åú„Å™„ÅúÂàÜÊûê„Éª6W2HÂàÜÊûê„ÇíÂÆüË°å„Åó„Åæ„Åô</p>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- „É≠„Éº„Éá„Ç£„É≥„Ç∞„Ç™„Éº„Éê„Éº„É¨„Ç§ -->
    <div id="loadingOverlay" class="loading-overlay hidden">
        <div class="bg-white rounded-lg p-6 max-w-sm mx-auto text-center">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-3"></div>
            <h3 class="text-base font-semibold text-gray-800 mb-1">Ë®ò‰∫ã„ÇíÂàÜÊûê‰∏≠...</h3>
            <p class="text-gray-600 text-xs" id="loadingMessage">AI „ÅåË®ò‰∫ã„ÇíË©≥Á¥∞ÂàÜÊûê„Åó„Å¶„ÅÑ„Åæ„Åô</p>
            <div class="mt-3 bg-gray-200 rounded-full h-1.5">
                <div class="bg-gradient-to-r from-blue-600 to-purple-600 h-1.5 rounded-full transition-all duration-500" id="loadingProgress" style="width: 0%"></div>
            </div>
        </div>
    </div>

    <!-- Êñ∞Ë®ò‰∫ãÂÖ•Âäõ„É¢„Éº„ÉÄ„É´ -->
    <div id="newArticleModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
        <div class="bg-white rounded-lg max-w-2xl w-full p-6 max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-gray-800">Êñ∞„Åó„ÅÑË®ò‰∫ã„ÇíÂÖ•Âäõ</h3>
                <button onclick="hideNewArticleModal()" class="text-gray-400 hover:text-gray-600 text-2xl">√ó</button>
            </div>
            <form id="newArticleForm" onsubmit="analyzeNewArticle(event)">
                <div class="mb-4">
                    <textarea 
                        id="newArticleInput" 
                        rows="12" 
                        class="w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 resize-y"
                        placeholder="Êñ∞„Åó„ÅÑË®ò‰∫ãÂÜÖÂÆπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ..."
                        required></textarea>
                </div>
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="hideNewArticleModal()" class="px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50">
                        „Ç≠„É£„É≥„Çª„É´
                    </button>
                    <button type="submit" class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        ÂàÜÊûêÈñãÂßã
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let currentComments = [];
        let analysisResults = {};
        let isEditMode = false;
        let originalContent = '';

        // ÊñáÂ≠óÊï∞„Ç´„Ç¶„É≥„Éà
        const articleInput = document.getElementById('articleInput');
        const charCount = document.getElementById('charCount');
        
        articleInput.addEventListener('input', function() {
            charCount.textContent = this.value.length.toLocaleString() + ' ÊñáÂ≠ó';
        });

        // Ë®ò‰∫ãÂàÜÊûê„ÅÆÂÆüË°å
        async function analyzeArticle(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const content = formData.get('content').trim();
            const persona = formData.get('persona').trim();
            const releaseType = formData.get('release_type').trim();
            
            if (!content) {
                alert('Ë®ò‰∫ãÂÜÖÂÆπ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
                return;
            }

            // „É≠„Éº„Éá„Ç£„É≥„Ç∞Ë°®Á§∫
            showLoading();
            
            try {
                // 3„Å§„ÅÆAIÂàÜÊûê„Çí‰∏¶Ë°åÂÆüË°å
                updateLoadingProgress(20, 'AIÂàÜÊûê„ÇíÈñãÂßã„Åó„Å¶„ÅÑ„Åæ„Åô...');
                
                const [strengthResult, whyResult, sixTwoResult] = await Promise.all([
                    executeStrengthAnalysis(content, persona, releaseType),
                    executeWhyAnalysis(content),
                    executeSixTwoReview(content)
                ]);
                
                updateLoadingProgress(90, 'ÂàÜÊûêÁµêÊûú„ÇíÂá¶ÁêÜ‰∏≠...');
                
                analysisResults = {
                    strength: strengthResult,
                    why: whyResult,
                    sixTwo: sixTwoResult,
                    content: content
                };
                
                // ÁµêÊûú„ÇíË°®Á§∫
                displayArticleWithComments(content);
                generateComments();
                
                updateLoadingProgress(100, 'ÂÆå‰∫ÜÔºÅ');
                
                setTimeout(() => {
                    hideLoading();
                    showReviewContainer();
                }, 500);
                
            } catch (error) {
                console.error('Analysis failed:', error);
                hideLoading();
                alert('ÂàÜÊûê‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ');
            }
        }

        // Âº∑„ÅøÂàÜÊûêÂÆüË°å
        async function executeStrengthAnalysis(content, persona, releaseType) {
            updateLoadingProgress(30, 'Âº∑„ÅøÂàÜÊûêÂÆüË°å‰∏≠...');
            
            const response = await fetch('/api/strength-analysis/analyze', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                },
                body: JSON.stringify({ content, persona, release_type: releaseType })
            });

            const result = await response.json();
            if (!result.success) {
                throw new Error(result.message || 'Âº∑„ÅøÂàÜÊûê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü');
            }
            
            return result.data;
        }

        // „Å™„Åú„Å™„ÅúÂàÜÊûêÂÆüË°å
        async function executeWhyAnalysis(content) {
            updateLoadingProgress(50, '„Å™„Åú„Å™„ÅúÂàÜÊûêÂÆüË°å‰∏≠...');
            
            const startResponse = await fetch('/api/why-analysis/start', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                },
                body: JSON.stringify({ content })
            });

            const startResult = await startResponse.json();
            if (!startResult.success) {
                throw new Error(startResult.message || '„Å™„Åú„Å™„ÅúÂàÜÊûê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü');
            }

            // Ëá™ÂãïÁöÑ„Å´Ê¥ûÂØüÁîüÊàê
            const insightResponse = await fetch('/api/why-analysis/insight', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                },
                body: JSON.stringify({
                    content: content,
                    chat_history: [{
                        type: 'bot_question',
                        content: startResult.data.bot_response || '„Å™„Åú„Å™„ÅúÂàÜÊûê„ÇíÈñãÂßã„Åó„Åæ„Åó„Åü',
                        timestamp: new Date().toISOString()
                    }],
                    session_id: startResult.session_id
                })
            });

            const insightResult = await insightResponse.json();
            if (!insightResult.success) {
                throw new Error(insightResult.message || 'Ê¥ûÂØüÁîüÊàê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü');
            }

            return insightResult.data;
        }

        // 6W2HÂàÜÊûêÂÆüË°å
        async function executeSixTwoReview(content) {
            updateLoadingProgress(70, '6W2HÂàÜÊûêÂÆüË°å‰∏≠...');
            
            const response = await fetch('/api/sixtwo-review', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                },
                body: JSON.stringify({ content })
            });

            const result = await response.json();
            if (!result.success) {
                throw new Error(result.message || '6W2HÂàÜÊûê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü');
            }

            return result.data;
        }

        // Ë®ò‰∫ãÂÜÖÂÆπ„Çí„Éè„Ç§„É©„Ç§„Éà‰ªò„Åç„ÅßË°®Á§∫
        function displayArticleWithComments(content) {
            originalContent = content;
            const articleContent = document.getElementById('articleContent');
            const editTextarea = document.getElementById('editTextarea');
            
            // Á∑®ÈõÜÁî®„ÉÜ„Ç≠„Çπ„Éà„Ç®„É™„Ç¢„Å´„ÇÇÂÜÖÂÆπ„ÇíË®≠ÂÆö
            editTextarea.value = content;
            updateEditCharCount();
            
            // Markdown „Çí HTML „Å´Â§âÊèõÔºàÁ∞°ÊòìÁâàÔºâ
            let htmlContent = content
                .replace(/^# (.*$)/gim, '<h1 class="text-3xl font-bold text-gray-900 mb-6">$1</h1>')
                .replace(/^## (.*$)/gim, '<h2 class="text-2xl font-semibold text-gray-800 mb-4 mt-8">$1</h2>')
                .replace(/^### (.*$)/gim, '<h3 class="text-xl font-medium text-gray-800 mb-3 mt-6">$1</h3>')
                .replace(/\*\*(.*?)\*\*/g, '<strong class="font-semibold">$1</strong>')
                .replace(/\*(.*?)\*/g, '<em class="italic">$1</em>')
                .replace(/!\[([^\]]*)\]\(([^)]+)\)/g, '<img src="$2" alt="$1" class="w-full h-auto rounded-lg my-6 shadow-md">')
                .replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2" class="text-blue-600 hover:text-blue-800 underline">$1</a>')
                .replace(/^- (.*$)/gim, '<li class="ml-4">$1</li>')
                .replace(/\n\n/g, '</p><p class="mb-4">')
                .replace(/\n/g, '<br>');

            // ÊÆµËêΩ„ÅßÂõ≤„ÇÄ
            htmlContent = '<p class="mb-4">' + htmlContent + '</p>';
            
            // „É™„Çπ„Éà„Çí ul „ÅßÂõ≤„ÇÄ
            htmlContent = htmlContent.replace(/(<li class="ml-4">.*?<\/li>)/gs, '<ul class="list-disc list-inside mb-4 space-y-1">$1</ul>');
            
            articleContent.innerHTML = htmlContent;
        }

        // „Ç≥„É°„É≥„Éà„ÅÆÁîüÊàê„Å®Ë°®Á§∫
        function generateComments() {
            currentComments = [];
            const { strength, why, sixTwo } = analysisResults;

            // Âº∑„ÅøÂàÜÊûê„Åã„Çâ„ÅÆ„Ç≥„É°„É≥„Éà
            if (strength.missing_elements) {
                strength.missing_elements.forEach((element, index) => {
                    currentComments.push({
                        id: `strength_${index}`,
                        type: 'strength',
                        title: `${element.element}Ë¶ÅÁ¥†„ÅÆËøΩÂä†`,
                        content: element.suggestion,
                        severity: 'medium',
                        category: 'Âº∑„ÅøÂàÜÊûê',
                        position: index * 100 + 50 // ‰ªÆ„ÅÆ‰ΩçÁΩÆ
                    });
                });
            }

            // „Å™„Åú„Å™„ÅúÂàÜÊûê„Åã„Çâ„ÅÆ„Ç≥„É°„É≥„Éà  
            if (why.pr_recommendations) {
                why.pr_recommendations.forEach((rec, index) => {
                    currentComments.push({
                        id: `why_${index}`,
                        type: 'why',
                        title: 'PRÊ¥ªÁî®„ÅÆ„Éù„Ç§„É≥„Éà',
                        content: rec,
                        severity: 'high',
                        category: '„Å™„Åú„Å™„ÅúÂàÜÊûê',
                        position: index * 120 + 80
                    });
                });
            }

            // Ë®ò‰∫ãÊ¥ªÁî®‰æã„Åã„Çâ„ÅÆ„Ç≥„É°„É≥„Éà
            if (why.article_applications) {
                why.article_applications.forEach((app, index) => {
                    if (app.after_example || app.suggestion) {
                        currentComments.push({
                            id: `application_${index}`,
                            type: 'application',
                            title: `${app.section}„ÅÆÊîπÂñÑ`,
                            content: app.after_example || app.suggestion,
                            detail: app.reason,
                            tips: app.tips,
                            severity: 'high',
                            category: 'Ë®ò‰∫ãÊîπÂñÑ',
                            position: index * 140 + 120
                        });
                    }
                });
            }

            // 6W2HÂàÜÊûê„Åã„Çâ„ÅÆ„Ç≥„É°„É≥„Éà
            if (sixTwo.review) {
                currentComments.push({
                    id: 'sixtwo_main',
                    type: 'sixtwo',
                    title: '6W2HÊßãÊàê„ÉÅ„Çß„ÉÉ„ÇØ',
                    content: sixTwo.review,
                    severity: 'low',
                    category: '6W2HÂàÜÊûê',
                    position: 200
                });
            }

            displayComments();
            addHighlights();
            updateCommentCount();
        }

        // „Ç≥„É°„É≥„Éà„ÅÆË°®Á§∫
        function displayComments() {
            const container = document.getElementById('commentsContainer');
            const noCommentsMessage = document.getElementById('noCommentsMessage');

            if (currentComments.length === 0) {
                noCommentsMessage.style.display = 'block';
                noCommentsMessage.textContent = 'ÊîπÂñÑÊèêÊ°à„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇÁ¥†Êô¥„Çâ„Åó„ÅÑË®ò‰∫ã„Åß„ÅôÔºÅ';
                return;
            }

            noCommentsMessage.style.display = 'none';

            container.innerHTML = currentComments.map(comment => {
                const severityColor = {
                    'high': 'border-red-300 bg-red-50',
                    'medium': 'border-yellow-300 bg-yellow-50', 
                    'low': 'border-blue-300 bg-blue-50'
                }[comment.severity] || 'border-gray-300 bg-gray-50';

                const severityIcon = {
                    'high': 'üî•',
                    'medium': '‚ö†Ô∏è',
                    'low': 'üí°'
                }[comment.severity] || 'üí¨';

                return `
                    <div class="comment-item ${severityColor}" data-comment-id="${comment.id}" onclick="highlightComment('${comment.id}')">
                        <div class="p-4">
                            <div class="flex items-start justify-between mb-2">
                                <div class="flex items-center space-x-2">
                                    <span class="text-lg">${severityIcon}</span>
                                    <span class="text-xs px-2 py-1 bg-white rounded-full text-gray-600">${comment.category}</span>
                                </div>
                                <div class="flex space-x-2">
                                    <button onclick="applyComment('${comment.id}')" class="text-blue-600 hover:text-blue-800 text-sm">
                                        ÈÅ©Áî®
                                    </button>
                                    <button onclick="applyCommentToEditor('${comment.id}')" class="text-green-600 hover:text-green-800 text-sm">
                                        Á∑®ÈõÜ„Å∏
                                    </button>
                                </div>
                            </div>
                            <h4 class="font-medium text-gray-800 mb-2">${comment.title}</h4>
                            <p class="text-sm text-gray-700 mb-2">${comment.content.substring(0, 150)}${comment.content.length > 150 ? '...' : ''}</p>
                            
                            ${comment.detail ? `
                                <div class="mt-3 p-3 bg-white bg-opacity-70 rounded border-l-2 border-gray-300">
                                    <p class="text-xs text-gray-600">${comment.detail}</p>
                                </div>
                            ` : ''}
                            
                            ${comment.tips ? `
                                <div class="mt-2 text-xs text-gray-500">
                                    üí° <strong>„Ç≥„ÉÑ:</strong> ${comment.tips}
                                </div>
                            ` : ''}
                        </div>
                    </div>
                `;
            }).join('');
        }

        // Ë®ò‰∫ãÂÜÖ„Å´„Éè„Ç§„É©„Ç§„Éà„ÇíËøΩÂä†
        function addHighlights() {
            // ÂÆüË£ÖÁ∞°Áï•ÂåñÔºöÂêÑÊÆµËêΩ„Å´ÊΩúÂú®ÁöÑ„Å™ÊîπÂñÑÁÇπ„Å®„Åó„Å¶ËñÑ„ÅÑ„Éè„Ç§„É©„Ç§„Éà„ÇíËøΩÂä†
            const articleContent = document.getElementById('articleContent');
            const paragraphs = articleContent.querySelectorAll('p, h1, h2, h3');
            
            paragraphs.forEach((paragraph, index) => {
                if (index < currentComments.length) {
                    const comment = currentComments[index];
                    paragraph.classList.add('comment-highlight');
                    paragraph.setAttribute('data-comment-id', comment.id);
                    paragraph.addEventListener('click', () => highlightComment(comment.id));
                }
            });
        }

        // „Ç≥„É°„É≥„Éà„ÅÆ„Éè„Ç§„É©„Ç§„Éà
        function highlightComment(commentId) {
            // ÂÖ®„Å¶„ÅÆ„Éè„Ç§„É©„Ç§„Éà„Çí„É™„Çª„ÉÉ„Éà
            document.querySelectorAll('.comment-highlight').forEach(el => {
                el.classList.remove('active');
            });
            document.querySelectorAll('.comment-item').forEach(el => {
                el.classList.remove('highlighted');
            });

            // ÈÅ∏Êäû„Åï„Çå„Åü„Ç≥„É°„É≥„Éà„Çí„Éè„Ç§„É©„Ç§„Éà
            const commentElement = document.querySelector(`[data-comment-id="${commentId}"]`);
            const commentItem = document.querySelector(`.comment-item[data-comment-id="${commentId}"]`);
            
            if (commentElement) {
                commentElement.classList.add('active');
                commentElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
            
            if (commentItem) {
                commentItem.classList.add('highlighted');
                commentItem.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
        }

        // „Ç≥„É°„É≥„Éà„ÅÆÈÅ©Áî®
        function applyComment(commentId) {
            const comment = currentComments.find(c => c.id === commentId);
            if (!comment) return;

            // Á∞°Âçò„Å™ÈÅ©Áî®Âá¶ÁêÜÔºö„Ç¢„É©„Éº„Éà„ÅßÂÜÖÂÆπ„ÇíË°®Á§∫
            alert(`ÊîπÂñÑÊèêÊ°à„ÇíÈÅ©Áî®„Åó„Åæ„Åó„Åü:\n\n${comment.title}\n\n${comment.content}`);
            
            // ÂÆüÈöõ„ÅÆÂÆüË£Ö„Åß„ÅØ„ÄÅË®ò‰∫ãÂÜÖÂÆπ„ÇíÁõ¥Êé•Á∑®ÈõÜ„Åô„ÇãÊ©üËÉΩ„ÇíËøΩÂä†„Åß„Åç„Åæ„Åô
        }

        // „Ç≥„É°„É≥„Éà„ÇíÁ∑®ÈõÜ„Ç®„É™„Ç¢„Å´ÈÅ©Áî®
        function applyCommentToEditor(commentId) {
            const comment = currentComments.find(c => c.id === commentId);
            if (!comment) return;

            // Á∑®ÈõÜ„É¢„Éº„Éâ„Å´Âàá„ÇäÊõø„Åà
            if (!isEditMode) {
                toggleEditMode();
            }

            // „ÉÜ„Ç≠„Çπ„Éà„Ç®„É™„Ç¢„Å´ÊîπÂñÑÊèêÊ°à„ÇíËøΩÂä†
            const textarea = document.getElementById('editTextarea');
            const currentText = textarea.value;
            
            // ÊîπÂñÑÊèêÊ°à„Çí„Ç≥„É°„É≥„ÉàÂΩ¢Âºè„ÅßËøΩÂä†
            const improvement = `\n\n<!-- ${comment.title} -->\n<!-- ${comment.content} -->\n<!-- „Ç´„ÉÜ„Ç¥„É™: ${comment.category} -->\n`;
            
            textarea.value = currentText + improvement;
            textarea.scrollTop = textarea.scrollHeight;
            updateEditCharCount();
            
            // „Éï„Ç©„Éº„Ç´„Çπ
            textarea.focus();
            
            // ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏
            showToast('ÊîπÂñÑÊèêÊ°à„ÇíÁ∑®ÈõÜ„Ç®„É™„Ç¢„Å´ËøΩÂä†„Åó„Åæ„Åó„Åü', 'success');
        }

        // Á∑®ÈõÜ„É¢„Éº„Éâ„ÅÆÂàá„ÇäÊõø„Åà
        function toggleEditMode() {
            const editModeBtn = document.getElementById('editModeBtn');
            const articleContent = document.getElementById('articleContent');
            const editMode = document.getElementById('editMode');
            
            isEditMode = !isEditMode;
            
            if (isEditMode) {
                editModeBtn.textContent = '„Éó„É¨„Éì„É•„Éº';
                editModeBtn.className = 'px-3 py-1 bg-green-100 text-green-700 text-sm rounded-full hover:bg-green-200 transition-colors';
                articleContent.classList.add('hidden');
                editMode.classList.remove('hidden');
            } else {
                editModeBtn.textContent = 'Á∑®ÈõÜ„É¢„Éº„Éâ';
                editModeBtn.className = 'px-3 py-1 bg-blue-100 text-blue-700 text-sm rounded-full hover:bg-blue-200 transition-colors';
                articleContent.classList.remove('hidden');
                editMode.classList.add('hidden');
            }
        }

        // „Éó„É¨„Éì„É•„ÉºÊõ¥Êñ∞
        function previewChanges() {
            const textarea = document.getElementById('editTextarea');
            const newContent = textarea.value;
            
            if (newContent !== originalContent) {
                displayArticleWithComments(newContent);
                showToast('„Éó„É¨„Éì„É•„Éº„ÇíÊõ¥Êñ∞„Åó„Åæ„Åó„Åü', 'success');
            }
        }

        // Â§âÊõ¥„Çí‰øùÂ≠ò
        function saveChanges() {
            const textarea = document.getElementById('editTextarea');
            originalContent = textarea.value;
            analysisResults.content = originalContent;
            
            previewChanges();
            showToast('Â§âÊõ¥„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Åü', 'success');
        }

        // ÂÜçÂàÜÊûê
        async function reAnalyze() {
            const textarea = document.getElementById('editTextarea');
            const newContent = textarea.value.trim();
            
            if (!newContent) {
                alert('ÂàÜÊûê„Åô„ÇãÂÜÖÂÆπ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ');
                return;
            }

            // ‰øùÂ≠ò„Åó„Å¶„Åã„ÇâÂÜçÂàÜÊûê
            saveChanges();
            
            showLoading();
            updateLoadingProgress(10, 'ÂÜçÂàÜÊûê„ÇíÈñãÂßã„Åó„Å¶„ÅÑ„Åæ„Åô...');
            
            try {
                const [strengthResult, whyResult, sixTwoResult] = await Promise.all([
                    executeStrengthAnalysis(newContent, '', ''),
                    executeWhyAnalysis(newContent),
                    executeSixTwoReview(newContent)
                ]);
                
                updateLoadingProgress(90, 'Êñ∞„Åó„ÅÑÂàÜÊûêÁµêÊûú„ÇíÂá¶ÁêÜ‰∏≠...');
                
                analysisResults = {
                    strength: strengthResult,
                    why: whyResult,
                    sixTwo: sixTwoResult,
                    content: newContent
                };
                
                generateComments();
                updateLoadingProgress(100, 'ÂÆå‰∫ÜÔºÅ');
                
                setTimeout(() => {
                    hideLoading();
                    showToast('ÂÜçÂàÜÊûê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü', 'success');
                }, 500);
                
            } catch (error) {
                console.error('Re-analysis failed:', error);
                hideLoading();
                showToast('ÂÜçÂàÜÊûê‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü', 'error');
            }
        }

        // Á∑®ÈõÜ„Ç®„É™„Ç¢„ÅÆÊñáÂ≠óÊï∞„Ç´„Ç¶„É≥„Éà
        function updateEditCharCount() {
            const textarea = document.getElementById('editTextarea');
            const charCountEl = document.getElementById('editCharCount');
            if (textarea && charCountEl) {
                charCountEl.textContent = textarea.value.length.toLocaleString() + ' ÊñáÂ≠ó';
            }
        }

        // „Éà„Éº„Çπ„ÉàÈÄöÁü•
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `fixed top-4 right-4 p-4 rounded-lg text-white z-50 animate-in slide-in-from-top ${
                type === 'success' ? 'bg-green-500' : 
                type === 'error' ? 'bg-red-500' : 'bg-blue-500'
            }`;
            toast.textContent = message;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.classList.add('animate-out', 'slide-out-to-top');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        // UIÂà∂Âæ°Èñ¢Êï∞
        function showLoading() {
            document.getElementById('loadingOverlay').classList.remove('hidden');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.add('hidden');
        }

        function updateLoadingProgress(percent, message) {
            document.getElementById('loadingProgress').style.width = percent + '%';
            document.getElementById('loadingMessage').textContent = message;
        }

        function showReviewContainer() {
            document.getElementById('inputContainer').classList.add('hidden');
            document.getElementById('reviewContainer').classList.remove('hidden');
        }

        function showNewArticleModal() {
            document.getElementById('newArticleModal').classList.remove('hidden');
        }

        function hideNewArticleModal() {
            document.getElementById('newArticleModal').classList.add('hidden');
            document.getElementById('newArticleForm').reset();
        }

        function updateCommentCount() {
            document.getElementById('commentCount').textContent = `„Ç≥„É°„É≥„Éà: ${currentComments.length}`;
        }

        function analyzeNewArticle(event) {
            event.preventDefault();
            const content = document.getElementById('newArticleInput').value.trim();
            if (!content) return;
            
            // „Éï„Ç©„Éº„É†„Å´„Éá„Éº„Çø„ÇíË®≠ÂÆö„Åó„Å¶Êó¢Â≠ò„ÅÆÂàÜÊûêÈñ¢Êï∞„ÇíÂëº„Å≥Âá∫„Åó
            document.getElementById('articleInput').value = content;
            document.getElementById('targetPersona').value = '';
            document.getElementById('releaseType').value = '';
            
            hideNewArticleModal();
            analyzeArticle(event);
        }

        function exportComments() {
            if (currentComments.length === 0) {
                alert('„Ç®„ÇØ„Çπ„Éù„Éº„Éà„Åô„Çã„Ç≥„É°„É≥„Éà„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ');
                return;
            }

            const exportData = {
                article: analysisResults.content,
                comments: currentComments,
                timestamp: new Date().toISOString(),
                total_comments: currentComments.length
            };

            const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `article_review_${new Date().toISOString().slice(0, 10)}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }

        // „É¢„Éº„ÉÄ„É´Â§ñ„ÇØ„É™„ÉÉ„ÇØ„ÅßÈñâ„Åò„Çã
        document.getElementById('newArticleModal').addEventListener('click', function(e) {
            if (e.target === this) {
                hideNewArticleModal();
            }
        });
    </script>
</body>
</html>